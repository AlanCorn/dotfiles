# ~/.config/wayfire.ini
# Default config for Wayfire
#
# Copy this to ~/.config/wayfire.ini and edit it to your liking.
#
# Take the tutorial to get started.
# https://github.com/WayfireWM/wayfire/wiki/Tutorial
#
# Read the Configuration document for a complete reference.
# wayfire配置 WIKI页面
# https://github.com/WayfireWM/wayfire/wiki/Configuration

#
# See Input options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#input

[input]
xkb_layout = us                   # 键盘格式
# xkb_variant = dvorak,bepo       # 键盘变体，除了默认的qwer式的布局之外的其他，一般不需要配置
kb_numlock_default_state = true   # 键盘数字锁默认是否开启
mouse_accel_profile = adaptive    # 关于鼠标速度的配置方案，adaptive意为“适应”
cursor_theme = Adwaita            # 鼠标指针样式
cursor_size = 24                  # 鼠标指针大小，默认为24

[output:eDP-1]
#屏幕输出分辨率，位置，方向，缩放等
mode = 1920x1080@60000
position = 0,0
transform = normal
scale = 1.000000

[output:HDMI-A-1]
mode = 2560x1440@60000
position = 1920,0
transform = normal
scale = 1.000000

# You can get the names of your outputs with wlr-randr.
# 你可以通过wlr-randr来查看你的显示器名
# https://github.com/emersion/wlr-randr
#
# See also kanshi for configuring your outputs automatically.
# https://wayland.emersion.fr/kanshi/
#
# See Output options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#output

# Core options ─────────────────────────────────────────────────────────────────
[core]
# List of plugins to be enabled.
# See the Configuration document for a complete list.
plugins = \
  alpha \
  animate \
  autostart \
  blur \        # blur 默认配置中不开启，因为它可能会占用大量资源，但这里已开启
  command \
  cube \
  decoration \
  expo \
  fast-switcher \
  fisheye \
  grid \
  idle \
  invert \
  move \
  oswitch \
  place \
  resize \
  switcher \
  vswitch \
  window-rules \
  wm-actions \
  wobbly \
  wrot \
  zoom \
  simple-tile         # 窗口平铺


close_top_view = <super> KEY_X | <alt> KEY_F4   # 关闭窗口的快捷键

# Workspaces arranged into a grid: 3 × 3.
# 工作区间数量比例
vwidth = 2
vheight = 2

# Prefer client-side decoration or server-side decoration
# 首选窗口装饰
preferred_decoration_mode = server

[simple-tile]
# 设置平铺窗口间隔
outer_horiz_gap_size = 4
outer_vert_gap_size = 4


# Effects ──────────────────────────────────────────────────────────────────────
[animate]
open_animation = fade
close_animation = fade
duration = 200

# Mouse bindings ───────────────────────────────────────────────────────────────
# 鼠标绑定

# 装饰
[decoration]
title_height =  0
active_color = 0.36862745 0.505882 0.67450 1
inactive_color = 0.298039215 0.33725490196078434 0.41568627450980394 1
#ignore_views = title contains "Ulauncher"

[move]
activate = <super> BTN_LEFT     # 窗口移动，super+左键 BTN_LEFT是鼠标左键

[resize]
activate = <super> BTN_RIGHT    # 窗口大小，super+右键

[zoom]
modifier = <super>              # 缩放(放大镜) super+滚轮
speed = 0.010000
smoothing_duration = 300

[alpha]
modifier = <super> <alt>        # 窗口透明度 super+alt+滚轮

[wrot]
activate = <super> <alt> BTN_RIGHT  # 窗口旋转 super+alt+右键

# Fisheye effect.
# 鱼眼
[fisheye]
toggle = <super> <ctrl> KEY_F

# Startup commands ─────────────────────────────────────────────────────────────
# 自启
[autostart]
# Automatically start background and panel.
# Set to false if you want to override the default clients.
#
# Set the wallpaper, start a panel and dock if you want one.
# https://github.com/WayfireWM/wf-shell
#
# These are started by the autostart_wf_shell option above.
#
# 确认开启自启
autostart_wf_shell = true

# background = wf-background
# 1. 指定单张壁纸
background = swaybg -i /home/alancorn/Pictures/95499772_p0.png -m fill
# 2. 随机壁纸(从targetDir目录下随即选择一张作为壁纸)
# background = swaybg -i $(find [targetDir] -type f | shuf -n1) -m fill
# 3. 指定时间自动更换壁纸
# 方法有很多，如果有需要可以自己写个脚本
# 4. 视频壁纸
# eDP-1_video_background = mpvpaper -p -n 50 -o "no-audio loop loop-playlist" eDP-1 ~/Moichi_Lin/wallpaper/mpvpaper/
# HDMI_video_background = mpvpaper -p -n 50 -o "no-audio loop loop-playlist" HDMI-A-1 ~/Moichi_Lin/wallpaper/mpvpaper/

# bar
bar = waybar
# panel = wf-panel
# dock = wf-dock


# 输入法
inputmethod = fcitx5

# Output configuration
# 屏幕输出
# https://wayland.emersion.fr/kanshi/
# outputs = kanshi

# Notifications
# 通知
# https://wayland.emersion.fr/mako/
notifications = mako

# Screen color temperature
# 屏幕色温 已关闭，启用时请安装 wlsunset
# https://sr.ht/~kennylevinsen/wlsunset/
# gamma = wlsunset

# Idle configuration
# 空闲设置
# https://github.com/swaywm/swayidle
# https://github.com/swaywm/swaylock
idle = swayidle before-sleep swaylock

# XDG desktop portal
# Needed by some GTK applications
portal = /usr/libexec/xdg-desktop-portal

[idle]
# toggle = <super> KEY_L          
screensaver_timeout = 300       # 无活动300秒锁屏
dpms_timeout = 600              # 无活动600秒静如节能模式
# Disables the compositor going idle with Super + z.
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds.

# Command ─────────────────────────────────────────────────────────────────
# 自定义命令
[command]
# 文件管理器
binding_file_manager = <super> <alt> KEY_F
command_file_manager = thunar

# 浏览器
binding_browser = <super> <alt> KEY_B
command_browser = google-chrome-stable

# brightnessctl 屏幕亮度 先装brightnessctl这个包
binding_brightness_down = KEY_BRIGHTNESSDOWN
command_brightness_down = brightnessctl set 5%-
binding_brightness_up = KEY_BRIGHTNESSUP
command_brightness_up = brightnessctl set +5%

# Start a terminal
# 启动一个终端
# https://github.com/alacritty/alacritty
binding_terminal = <super> KEY_Z
# command_terminal = kitty
command_terminal = alacritty

# Toggle Waybar
# 切换是否隐藏waybar
binding_waybar = <super> KEY_Q
command_waybar = killall -s USR1 waybar

# Start your launcher
# 启动luncher
# https://hg.sr.ht/~scoopta/wofi
# Note: Add mode=run or mode=drun to ~/.config/wofi/config.
# You can also specify the mode with --show option.
binding_launcher = <super> <shift> KEY_ENTER
command_launcher = rofi -show drun

# Screen locker
# 屏幕锁屏
# https://github.com/swaywm/swaylock
binding_lock = <super> <shift> KEY_ESC
command_lock = swaylock

# Logout
# 登出 登录管理器
# https://github.com/ArtsyMacaw/wlogout
binding_logout = <super> KEY_ESC
# command_logout = wlogout
command_logout = bash ~/.config/rofi/leave/leave.sh

# Screenshots
# 截图
# https://wayland.emersion.fr/grim/
# https://wayland.emersion.fr/slurp/
binding_screenshot = <ctrl> <super> <alt> KEY_C
command_screenshot = grim $HOME/Pictures/screenshot/$(date "+%F_%T").png

binding_screenshot_clip_paste = <ctrl> <alt> KEY_C
command_screenshot_clip_paste = slurp | grim -g - - | wl-copy && wl-paste > ~/Pictures/screenshot/$(date '+%F_%T').png

# Volume controls
# 音量控制
# https://alsa-project.org
repeatable_binding_volume_up = KEY_VOLUMEUP
command_volume_up = amixer set Master 5%+
repeatable_binding_volume_down = KEY_VOLUMEDOWN
command_volume_down = amixer set Master 5%-
binding_mute = KEY_MUTE
command_mute = amixer set Master toggle

# Windows ──────────────────────────────────────────────────────────────────────
# 窗口
# Actions related to window management functionalities.
#
# 窗口管理器动作
[wm-actions]
toggle_fullscreen = <super> KEY_F
# toggle_always_on_top = <super> KEY_X #始终置顶
# toggle_sticky = <super> <shift> KEY_X

# Position the windows in certain regions of the output.
# 设定窗口显示在屏幕的位置
[grid]
#
# ⇱ ↑ ⇲   │ 7 8 9
# ← f →   │ 4 5 6
# ⇱ ↓ ⇲ d │ 1 2 3 0
# ‾   ‾
# b是bottom c是center t是top
# l是左 r是右
# 所以可以显示在左下，右上，中间，左边什么的
# 通过super加小键盘数字键设置
slot_bl = <super> KEY_KP1
slot_b = <super> KEY_KP2
slot_br = <super> KEY_KP3
slot_l = <super> KEY_LEFT | <super> KEY_KP4
slot_c = <super> KEY_UP | <super> KEY_KP5
slot_r = <super> KEY_RIGHT | <super> KEY_KP6
slot_tl = <super> KEY_KP7
slot_t = <super> KEY_KP8
slot_tr = <super> KEY_KP9

# Restore default.
# 恢复窗口位置
restore = <super> KEY_DOWN | <super> KEY_KP0

# Change active window with an animation.
# 切换活动窗口
[switcher]
next_view = <alt> KEY_TAB
prev_view = <alt> <shift> KEY_TAB

# Simple active window switcher.
# 快速切换窗口
[fast-switcher]
activate = <alt> KEY_ESC

# Workspaces ───────────────────────────────────────────────────────────────────
# 工作区间
# Switch to workspace.
# 工作区间切换
[vswitch]
binding_left = <super> KEY_A
binding_down = <super> KEY_S
binding_up = <super> KEY_W
binding_right = <super> KEY_D
# 以下是默认
# binding_left = <ctrl> <super> KEY_LEFT
# binding_down = <ctrl> <super> KEY_DOWN
# binding_up = <ctrl> <super> KEY_UP
# binding_right = <ctrl> <super> KEY_RIGHT

# Move the focused window with the same key-bindings, but add ctrl.
# 带着活动窗口一起切换工作区间
with_win_left = <super> <ctrl> KEY_A
with_win_down = <super> <ctrl> KEY_S
with_win_up = <super> <ctrl> KEY_W
with_win_right = <super> <ctrl> KEY_D

# Show the current workspace row as a cube.
# 以立方体显示所有工作区间
[cube]
activate = <ctrl> <alt> BTN_LEFT

# Switch to the next or previous workspace.
# 快速切换到下一个工作区间
rotate_left = <super> <shift> KEY_A
rotate_right = <super> <shift> KEY_D

# Show an overview of all workspaces.
# 显示所有工作区间
[expo]
toggle = <super>
# Select a workspace.
# Workspaces are arranged into a grid of 3 × 3.
# The numbering is left to right, line by line.
# 编号是从左到右，从上到下一行一行
# See core.vwidth and core.vheight for configuring the grid.
# 切换到指定工作区间(根据自己有多少个来设置)
select_workspace_1 = KEY_1
select_workspace_2 = KEY_2
select_workspace_3 = KEY_3
select_workspace_4 = KEY_4
select_workspace_5 = KEY_5
select_workspace_6 = KEY_6
select_workspace_7 = KEY_7
select_workspace_8 = KEY_8
select_workspace_9 = KEY_9

# Outputs ──────────────────────────────────────────────────────────────────────
# 输出(屏幕)
# Change focused output.
# 屏幕切换，如果你接双屏的话
[oswitch]
# Switch to the next output.
# 切换到下一个屏幕
next_output = <super> KEY_O

# Same with the window.
# 带上活动窗口切换到下一个屏幕
next_output_with_win = <super> <shift> KEY_O

# Invert the colors of the whole output.
# 反色
[invert]
toggle = <super> KEY_I

# Rules ────────────────────────────────────────────────────────────────────────
# 规则
# Example configuration:
# 举例
# [window-rules]
# maximize_alacritty = on created if app_id is "Alacritty" then maximize
#
# You can get the properties of your applications with the following command:
# $ WAYLAND_DEBUG=1 alacritty 2>&1 | kak
#
# See Window rules for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#window-rules

# 窗口规则
[window-rules]
rule_1 = on created if app_id is "waybar" then keepabove
